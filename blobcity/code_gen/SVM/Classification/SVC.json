[
    {
        "cell_type": "markdown",
        "source": [
         "### Model\n",
         "Support vector machines (SVMs) are a set of supervised learning methods used for classification, regression and outliers detection.\n",
         "\n",
         "A Support Vector Machine is a discriminative classifier formally defined by a separating hyperplane. In other terms, for a given known/labelled data points, the SVM outputs an appropriate hyperplane that classifies the inputted new cases based on the hyperplane. In 2-Dimensional space, this hyperplane is a line separating a plane into two segments where each class or group occupied on either side.\n",
         "\n",
         "Here we have used SVC, the svc implementation is based on libsvm.  \n",
         "\n",
         "* #### Model Tuning Parameters\n",
         "    > - C -> Regularization parameter. The strength of the regularization is inversely proportional to C. Must be strictly positive.\n",
         "\n",
         "    > - kernel -> Specifies the kernel type to be used in the algorithm. It must be one of ‘linear’, ‘poly’, ‘rbf’, ‘sigmoid’, ‘precomputed’ or a callable. If none is given, ‘rbf’ will be used. If a callable is given it is used to pre-compute the kernel matrix from data matrices; that matrix should be an array of shape (n_samples, n_samples).\n",
         "\n",
         "    > - gamma -> Gamma is a hyperparameter that we have to set before the training model. Gamma decides how much curvature we want in a decision boundary.\n",
         "\n",
         "    > - degree -> Degree of the polynomial kernel function (‘poly’). Ignored by all other kernels.Using degree 1 is similar to using a linear kernel. Also, increasing degree parameter leads to higher training times."
        ],
        "metadata": {}
       },
       {
        "cell_type": "code",
        "execution_count": 14,
        "source": [
         "model=SVC(random_state=123)\r\n",
         "model.fit(x_train,y_train)"
        ],
        "outputs": [
         {
          "output_type": "execute_result",
          "data": {
           "text/plain": [
            "SVC(random_state=123)"
           ]
          },
          "metadata": {},
          "execution_count": 14
         }
        ],
        "metadata": {}
       }
]